version: "3.9"
services:
  frontend:
    environment:
      CHOKIDAR_USEPOLLING: "true"
    build:
      context: ../go-runs-frontend
      dockerfile: Dockerfile.local
      args:
        RUNBOOK_BACKEND_URL: http://auth:8080/health
        AUTH_BACKEND_URL: http://runbooks:8080/health
    ports:
      - 80:3000
    volumes:
      - ../go-runs-frontend:/app
      - ./configs/.env.local:/app/.env.local
  auth:
    build:
      context: ../go-runs
      dockerfile: build/auth/Dockerfile.local
    environment:
      CONFIG_FILE: /var/conf/config.yml
    ports:
      - 8089:8080
    volumes:
      - ../go-runs/cmd/auth:/build/cmd/auth
      - ../go-runs/internal:/build/internal
      - ../go-runs/go.mod:/build/go.mod
      - ../go-runs/go.sum:/build/go.sum
      - ./configs/auth_conf.yml:/var/conf/config.yml
  runbooks:
    build:
      context: ../go-runs
      dockerfile: build/runbooks/Dockerfile.local
    environment:
      CONFIG_FILE: /var/conf/config.yml
    ports:
      - 8080:8080
    volumes:
      - ../go-runs/cmd/runbooks:/build/cmd/runbooks
      - ../go-runs/internal:/build/internal
      - ../go-runs/go.mod:/build/go.mod
      - ../go-runs/go.sum:/build/go.sum
      - ./configs/backend_conf.yml:/var/conf/config.yml
  mongo:
    image: "mongo"
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
  db:
    image: postgres:11.9-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: auth
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: auth
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 9011:8080
    depends_on:
      - db      
  # auth:
  #   image: fusionauth/fusionauth-app:latest
  #   depends_on:
  #     - db
  #   environment:
  #     DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
  #     DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
  #     DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
  #     FUSIONAUTH_APP_RUNTIME_MODE: development
  #     FUSIONAUTH_APP_URL: http://fusionauth:9011
  #     SEARCH_TYPE: database
  #   restart: unless-stopped
  #   ports:
  #     - 9011:9011
  #   volumes:
  #     - fa_config:/usr/local/fusionauth/config

volumes:
  db_data:
  fa_config:
  mongodb_data_container:
